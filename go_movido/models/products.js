// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Products = sequelize.define('products', {
    company: {
      type: DataTypes.STRING,
    },
    name: {
      type: DataTypes.STRING,
    },
    description: {
      type: DataTypes.STRING,
    },
    price: {
      type: DataTypes.INTEGER,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
    rating: {
      type: DataTypes.INTEGER,
    },
    reviews: {
      type: DataTypes.INTEGER,
    },
    logoUrl: {
      type: DataTypes.STRING,
    },
    slug: {
      type: DataTypes.STRING,
    },
    sku: {
      type: DataTypes.STRING,
    },
    unlimitedData: {
      type: DataTypes.BOOLEAN,
    },
    unlimitedCall: {
      type: DataTypes.BOOLEAN,
    },
    obligation: {
      type: DataTypes.BOOLEAN,
    },
    timeContract: {
      type: DataTypes.STRING,
    },
    dataLimit: {
      type: DataTypes.STRING,
    },
    deliveryPrice: {
      type: DataTypes.STRING,
    },
    deliveryTime: {
      type: DataTypes.STRING,
    },
    delivery: {
      type: DataTypes.BOOLEAN,
    },
    simCardPrice: {
      type: DataTypes.DOUBLE,
    },
    callLimit: {
      type: DataTypes.STRING,
    },
    specialOffer: {
      type: DataTypes.STRING,
    },
    simNeeded: {
      type: DataTypes.BOOLEAN,
      defaultValue: false,
    },
    country: {
      type: DataTypes.STRING,
    },
  }, {
    tableName: 'products',
    underscored: true,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Products.associate = (models) => {
    Products.belongsTo(models.categories, {
      foreignKey: {
        name: 'categoryIdKey',
        field: 'category_id',
      },
      as: 'category',
    });
    Products.hasMany(models.subscriptions, {
      foreignKey: {
        name: 'productIdKey',
        field: 'product_id',
      },
      as: 'subscriptions',
    });
    Products.hasMany(models.productFeatures, {
      foreignKey: {
        name: 'productIdKey',
        field: 'product_id',
      },
      as: 'productFeatures',
    });
  };

  return Products;
};
